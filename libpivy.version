CODEABI_1.0 {
    global:
        /*
         * errf.c
         */
        _errf;
        _errfno;
        errf_cause;
        errf_caused_by;
        errf_errno;
        errf_file;
        errf_free;
        errf_function;
        errf_line;
        errf_message;
        errf_name;
        errfx;
        warnfx;

        /*
         * piv.c
         */
        piv_alg_from_string;
        piv_alg_to_string;
        piv_apdu_free;
        piv_apdu_get_reply;
        piv_apdu_make;
        piv_apdu_set_cmd;
        piv_apdu_sw;
        piv_apdu_transceive;
        piv_apdu_transceive_chain;
        piv_auth_admin;
        piv_auth_key;
        piv_box_cipher;
        piv_box_clone;
        piv_box_copy_pubkey;
        piv_box_encsize;
        piv_box_ephem_pubkey;
        piv_box_find_token;
        piv_box_free;
        piv_box_from_binary;
        piv_box_guid;
        piv_box_guid_hex;
        piv_box_has_guidslot;
        piv_box_kdf;
        piv_box_new;
        piv_box_nonce_size;
        piv_box_open;
        piv_box_open_agent;
        piv_box_open_offline;
        piv_box_pubkey;
        piv_box_seal;
        piv_box_seal_offline;
        piv_box_sealed;
        piv_box_set_data;
        piv_box_set_datab;
        piv_box_set_guid;
        piv_box_set_slot;
        piv_box_slot;
        piv_box_take_data;
        piv_box_take_datab;
        piv_box_to_binary;
        piv_box_version;
        piv_cardcap_data_model;
        piv_cardcap_decode;
        piv_cardcap_encode;
        piv_cardcap_free;
        piv_cardcap_has_pkcs15;
        piv_cardcap_id;
        piv_cardcap_id_hex;
        piv_cardcap_manufacturer;
        piv_cardcap_new;
        piv_cardcap_set_data_model;
        piv_cardcap_set_id;
        piv_cardcap_set_manufacturer;
        piv_cardcap_set_pkcs15;
        piv_cardcap_set_random_id;
        piv_cardcap_set_type;
        piv_cardcap_type;
        piv_change_pin;
        piv_chuid_clone;
        piv_chuid_decode;
        piv_chuid_encode;
        piv_chuid_free;
        piv_chuid_get_chuuid;
        piv_chuid_get_expiry;
        piv_chuid_get_fascn;
        piv_chuid_get_guid;
        piv_chuid_get_guidhex;
        piv_chuid_get_signature;
        piv_chuid_is_expired;
        piv_chuid_is_signed;
        piv_chuid_new;
        piv_chuid_set_chuuid;
        piv_chuid_set_expiry;
        piv_chuid_set_expiry_rel;
        piv_chuid_set_fascn;
        piv_chuid_set_guid;
        piv_chuid_set_random_guid;
        piv_chuid_set_signature;
        piv_chuid_tbs;
        piv_chuid_verify;
        piv_clear_pin;
        piv_close;
        piv_ecdh;
        piv_enumerate;
        piv_establish_context;
        piv_fascn_assoc_to_string;
        piv_fascn_clone;
        piv_fascn_decode;
        piv_fascn_encode;
        piv_fascn_free;
        piv_fascn_get_agency_code;
        piv_fascn_get_assoc;
        piv_fascn_get_cred_number;
        piv_fascn_get_cred_series;
        piv_fascn_get_indiv_cred_issue;
        piv_fascn_get_org_id;
        piv_fascn_get_org_type;
        piv_fascn_get_person_id;
        piv_fascn_get_system_code;
        piv_fascn_org_type_to_string;
        piv_fascn_set_agency_code;
        piv_fascn_set_cred_number;
        piv_fascn_set_cred_series;
        piv_fascn_set_indiv_cred_issue;
        piv_fascn_set_org_id;
        piv_fascn_set_person_id;
        piv_fascn_set_system_code;
        piv_fascn_to_string;
        piv_fascn_zero;
        piv_file_data_free;
        piv_find;
        piv_force_slot;
        piv_full_apdu_debug;
        piv_generate;
        piv_get_slot;
        piv_open;
        piv_pinfo_decode;
        piv_pinfo_encode;
        piv_pinfo_free;
        piv_pinfo_get_admin_key;
        piv_pinfo_get_affiliation;
        piv_pinfo_get_expiry;
        piv_pinfo_get_issuer;
        piv_pinfo_get_kv;
        piv_pinfo_get_kv_bool;
        piv_pinfo_get_kv_string;
        piv_pinfo_get_kv_uint;
        piv_pinfo_get_name;
        piv_pinfo_get_org_line_1;
        piv_pinfo_get_org_line_2;
        piv_pinfo_get_serial;
        piv_pinfo_new;
        piv_pinfo_set_admin_key;
        piv_pinfo_set_affiliation;
        piv_pinfo_set_expiry;
        piv_pinfo_set_expiry_rel;
        piv_pinfo_set_issuer;
        piv_pinfo_set_kv;
        piv_pinfo_set_kv_bool;
        piv_pinfo_set_kv_string;
        piv_pinfo_set_kv_uint;
        piv_pinfo_set_name;
        piv_pinfo_set_org_line_1;
        piv_pinfo_set_org_line_2;
        piv_pinfo_set_serial;
        piv_pinfo_unset_kv;
        piv_read_all_certs;
        piv_read_cardcap;
        piv_read_cert;
        piv_read_file;
        piv_read_pinfo;
        piv_release;
        piv_reset_pin;
        piv_select;
        piv_set_context;
        piv_sign;
        piv_sign_prehash;
        piv_slot_alg;
        piv_slot_cert;
        piv_slot_get_auth;
        piv_slot_id;
        piv_slot_issuer;
        piv_slot_next;
        piv_slot_pubkey;
        piv_slot_serial_hex;
        piv_slot_subject;
        piv_slotid_from_string;
        piv_slotid_to_string;
        piv_token_alg;
        piv_token_app_label;
        piv_token_app_uri;
        piv_token_chuid;
        piv_token_default_auth;
        piv_token_fascn;
        piv_token_guid;
        piv_token_guid_hex;
        piv_token_has_auth;
        piv_token_has_chuid;
        piv_token_has_signed_chuid;
        piv_token_has_vci;
        piv_token_in_txn;
        piv_token_is_ykpiv;
        piv_token_keyhistory_offcard;
        piv_token_keyhistory_oncard;
        piv_token_nalgs;
        piv_token_next;
        piv_token_offcard_url;
        piv_token_rdrname;
        piv_txn_begin;
        piv_txn_end;
        piv_verify_pin;
        piv_write_cardcap;
        piv_write_cert;
        piv_write_chuid;
        piv_write_file;
        piv_write_keyhistory;
        piv_write_pinfo;
        sshbuf_get_piv_box;
        sshbuf_put_piv_box;
        ykpiv_attest;
        ykpiv_generate;
        ykpiv_import;
        ykpiv_pinfo_get_admin_key;
        ykpiv_pinfo_set_admin_key;
        ykpiv_reset;
        ykpiv_set_admin;
        ykpiv_set_pin_retries;
        ykpiv_token_has_serial;
        ykpiv_token_serial;
        ykpiv_token_version;
        ykpiv_version_compare;

        /*
         * piv-certs.c/piv-ca.c
         */
        agent_sign_cert;
        agent_sign_crl;
        ca_aia_uri;
        ca_aia_uri_add;
        ca_aia_uri_count;
        ca_aia_uri_remove;
        ca_cak;
        ca_cert_sign;
        ca_cert_sign_req;
        ca_cert_tpl_add;
        ca_cert_tpl_first;
        ca_cert_tpl_flags;
        ca_cert_tpl_free;
        ca_cert_tpl_get;
        ca_cert_tpl_help;
        ca_cert_tpl_make_scope;
        ca_cert_tpl_name;
        ca_cert_tpl_new;
        ca_cert_tpl_next;
        ca_cert_tpl_remove;
        ca_cert_tpl_tpl;
        ca_cert_tpl_type;
        ca_close;
        ca_close_session;
        ca_config_dirty;
        ca_config_write;
        ca_crl_uri;
        ca_crl_uri_add;
        ca_crl_uri_count;
        ca_crl_uri_remove;
        ca_dn;
        ca_generate;
        ca_generate_crl;
        ca_get_ebox;
        ca_get_ebox_tpl;
        ca_get_ebox_tpl_name;
        ca_guidhex;
        ca_log_verify;
        ca_make_scope;
        ca_ocsp_uri;
        ca_ocsp_uri_add;
        ca_ocsp_uri_count;
        ca_ocsp_uri_remove;
        ca_open;
        ca_open_session;
        ca_pubkey;
        ca_rekey_ebox;
        ca_revoke_cert;
        ca_revoke_cert_serial;
        ca_rotate_pin;
        ca_session_auth;
        ca_session_auth_type;
        ca_session_authed;
        ca_set_ebox_tpl;
        ca_set_ebox_tpl;
        ca_set_ebox_tpl_name;
        ca_slug;
        ca_token_provision;
        ca_token_slot_tpl;
        ca_token_slot_tpl_add;
        ca_token_slot_tpl_alg;
        ca_token_slot_tpl_cert;
        ca_token_slot_tpl_first;
        ca_token_slot_tpl_free;
        ca_token_slot_tpl_id;
        ca_token_slot_tpl_make_scope;
        ca_token_slot_tpl_new;
        ca_token_slot_tpl_next;
        ca_token_slot_tpl_pin_policy;
        ca_token_slot_tpl_remove;
        ca_token_slot_tpl_touch_policy;
        ca_token_tpl_add;
        ca_token_tpl_first;
        ca_token_tpl_flags;
        ca_token_tpl_free;
        ca_token_tpl_get;
        ca_token_tpl_get_ebox_tpl;
        ca_token_tpl_help;
        ca_token_tpl_make_scope;
        ca_token_tpl_name;
        ca_token_tpl_new;
        ca_token_tpl_next;
        ca_token_tpl_remove;
        ca_token_tpl_set_ebox_tpl;
        cana_backup_tpl;
        cana_dn;
        cana_free;
        cana_initial_admin_key;
        cana_initial_pin;
        cana_initial_puk;
        cana_key_alg;
        cana_new;
        cana_pin_tpl;
        cana_puk_tpl;
        cana_scope;
        cert_tpl_find;
        cert_tpl_first;
        cert_tpl_help;
        cert_tpl_name;
        cert_tpl_next;
        cert_tpl_populate;
        cert_tpl_populate_req;
        cert_tpl_vars;
        cert_var_alloc_private;
        cert_var_defined;
        cert_var_eval;
        cert_var_free_all;
        cert_var_free_private;
        cert_var_help;
        cert_var_name;
        cert_var_next;
        cert_var_private;
        cert_var_raw_value;
        cert_var_required;
        cert_var_set;
        cert_var_set_help;
        cert_var_set_required;
        cert_var_value;
        parse_dn;
        piv_selfsign_cert;
        piv_sign_cert;
        piv_sign_cert_req;
        piv_sign_crl;
        pva_free;
        pva_initial_admin_key;
        pva_initial_pin;
        pva_initial_puk;
        pva_new;
        pva_new_admin_key;
        pva_new_pin;
        pva_new_puk;
        pva_token_scope;
        scope_all_vars;
        scope_eval;
        scope_free_root;
        scope_lookup;
        scope_new_empty;
        scope_new_for_tpl;
        scope_new_root;
        scope_parent;
        scope_populate_req;
        scope_set;
        scope_undef_vars;
        unparse_dn;

        /*
         * ebox.c
         */
        ebox_alloc_private;
        ebox_challenge_box;
        ebox_challenge_ctime;
        ebox_challenge_desc;
        ebox_challenge_destkey;
        ebox_challenge_free;
        ebox_challenge_hostname;
        ebox_challenge_id;
        ebox_challenge_response;
        ebox_challenge_type;
        ebox_challenge_words;
        ebox_cipher;
        ebox_config_alloc_private;
        ebox_config_free_private;
        ebox_config_next_part;
        ebox_config_nonce_len;
        ebox_config_private;
        ebox_config_tpl;
        ebox_create;
        ebox_ephem_count;
        ebox_free;
        ebox_free_private;
        ebox_gen_challenge;
        ebox_is_unlocked;
        ebox_key;
        ebox_next_config;
        ebox_part_alloc_private;
        ebox_part_box;
        ebox_part_challenge;
        ebox_part_free_private;
        ebox_part_private;
        ebox_part_tpl;
        ebox_private;
        ebox_recover;
        ebox_recovery_token;
        ebox_stream_chunk_data;
        ebox_stream_chunk_data_buf;
        ebox_stream_chunk_free;
        ebox_stream_chunk_new;
        ebox_stream_chunk_size;
        ebox_stream_cipher;
        ebox_stream_decrypt_chunk;
        ebox_stream_ebox;
        ebox_stream_encrypt_chunk;
        ebox_stream_free;
        ebox_stream_mac;
        ebox_stream_new;
        ebox_stream_seek_offset;
        ebox_tpl;
        ebox_tpl_add_config;
        ebox_tpl_alloc;
        ebox_tpl_alloc_private;
        ebox_tpl_clone;
        ebox_tpl_config_add_part;
        ebox_tpl_config_alloc;
        ebox_tpl_config_alloc_private;
        ebox_tpl_config_free;
        ebox_tpl_config_free_private;
        ebox_tpl_config_n;
        ebox_tpl_config_next_part;
        ebox_tpl_config_private;
        ebox_tpl_config_remove_part;
        ebox_tpl_config_set_n;
        ebox_tpl_config_type;
        ebox_tpl_free;
        ebox_tpl_next_config;
        ebox_tpl_part_alloc;
        ebox_tpl_part_alloc_private;
        ebox_tpl_part_cak;
        ebox_tpl_part_free;
        ebox_tpl_part_free_private;
        ebox_tpl_part_guid;
        ebox_tpl_part_name;
        ebox_tpl_part_private;
        ebox_tpl_part_pubkey;
        ebox_tpl_part_set_cak;
        ebox_tpl_part_set_name;
        ebox_tpl_part_slot;
        ebox_tpl_private;
        ebox_tpl_remove_config;
        ebox_tpl_version;
        ebox_type;
        ebox_unlock;
        ebox_version;
        sshbuf_get_ebox;
        sshbuf_get_ebox_challenge;
        sshbuf_get_ebox_stream;
        sshbuf_get_ebox_stream_chunk;
        sshbuf_get_ebox_tpl;
        sshbuf_put_ebox;
        sshbuf_put_ebox_challenge;
        sshbuf_put_ebox_challenge_response;
        sshbuf_put_ebox_stream;
        sshbuf_put_ebox_stream_chunk;
        sshbuf_put_ebox_tpl;

        /*
         * bunyan.c
         */
        _bunyan_push;
        bunyan_add_vars;
        bunyan_get_level;
        bunyan_init;
        bunyan_log;
        bunyan_pop;
        bunyan_set_level;
        bunyan_set_name;
        bunyan_set_printer;
        bunyan_unshare;

        /*
         * utils.c
         */
        sshbuf_b16tod;
        assfail;
        assfail3;
        buf_to_hex;

        /*
         * sshbuf.h
         */
        sshbuf_alloc;
        sshbuf_allocate;
        sshbuf_avail;
        sshbuf_b64tod;
        sshbuf_check_reserve;
        sshbuf_cmp;
        sshbuf_consume;
        sshbuf_consume_end;
        sshbuf_dtob16;
        sshbuf_dtob64;
        sshbuf_dtob64_string;
        sshbuf_dtourlb64;
        sshbuf_dump;
        sshbuf_dump_data;
        sshbuf_dup_string;
        sshbuf_find;
        sshbuf_free;
        sshbuf_from;
        sshbuf_fromb;
        sshbuf_froms;
        sshbuf_get;
        sshbuf_get_bignum2;
        sshbuf_get_bignum2_bytes_direct;
        sshbuf_get_cstring;
        sshbuf_get_cstring8;
        sshbuf_get_ec;
        sshbuf_get_eckey;
        sshbuf_get_eckey8;
        sshbuf_get_string;
        sshbuf_get_string8;
        sshbuf_get_string8_conceal;
        sshbuf_get_string8_direct;
        sshbuf_get_stringb;
        sshbuf_get_stringb8;
        sshbuf_get_string_direct;
        sshbuf_get_u16;
        sshbuf_get_u32;
        sshbuf_get_u64;
        sshbuf_get_u8;
        sshbuf_len;
        sshbuf_load_fd;
        sshbuf_load_file;
        sshbuf_max_size;
        sshbuf_mutable_ptr;
        sshbuf_new;
        sshbuf_offset;
        sshbuf_parent;
        sshbuf_peek_string8_direct;
        sshbuf_peek_string_direct;
        sshbuf_peek_u16;
        sshbuf_peek_u32;
        sshbuf_peek_u64;
        sshbuf_peek_u8;
        sshbuf_poke;
        sshbuf_poke_u16;
        sshbuf_poke_u32;
        sshbuf_poke_u64;
        sshbuf_poke_u8;
        sshbuf_ptr;
        sshbuf_put;
        sshbuf_putb;
        sshbuf_put_bignum2;
        sshbuf_put_bignum2_bytes;
        sshbuf_put_cstring;
        sshbuf_put_cstring8;
        sshbuf_put_ec;
        sshbuf_put_ec8;
        sshbuf_put_eckey;
        sshbuf_put_eckey8;
        sshbuf_putf;
        sshbuf_putfv;
        sshbuf_put_string;
        sshbuf_put_string8;
        sshbuf_put_stringb;
        sshbuf_put_stringb8;
        sshbuf_put_u16;
        sshbuf_put_u32;
        sshbuf_put_u64;
        sshbuf_put_u8;
        sshbuf_read;
        sshbuf_refcount;
        sshbuf_reserve;
        sshbuf_reset;
        sshbuf_rewind;
        sshbuf_set_max_size;
        sshbuf_set_parent;
        sshbuf_write_file;

        /*
         * sshkey.c
         */
        sshkey_alg_list;
        sshkey_cert_check_authority;
        sshkey_cert_check_authority_now;
        sshkey_cert_check_host;
        sshkey_cert_copy;
        sshkey_certify;
        sshkey_certify_custom;
        sshkey_cert_type;
        sshkey_check_cert_sigtype;
        sshkey_check_rsa_length;
        sshkey_check_sigtype;
        sshkey_curve_name_to_nid;
        sshkey_curve_nid_to_bits;
        sshkey_drop_cert;
        sshkey_dump_ec_key;
        sshkey_dump_ec_point;
        sshkey_ecdsa_bits_to_nid;
        sshkey_ecdsa_key_to_nid;
        sshkey_ecdsa_nid_from_name;
        sshkey_ec_nid_to_hash_alg;
        sshkey_ec_validate_private;
        sshkey_ec_validate_public;
        sshkey_enable_maxsign;
        sshkey_equal;
        sshkey_equal_public;
        sshkey_fingerprint;
        sshkey_fingerprint_raw;
        sshkey_format_cert_validity;
        sshkey_format_text;
        sshkey_forward_state;
        sshkey_free;
        sshkey_fromb;
        sshkey_from_blob;
        sshkey_from_evp_pkey;
        sshkey_from_private;
        sshkey_froms;
        sshkey_generate;
        sshkey_get_sigtype;
        sshkey_is_cert;
        sshkey_is_shielded;
        sshkey_match_keyname_to_sigalgs;
        sshkey_names_valid2;
        sshkey_new;
        sshkey_parse_private_fileblob;
        sshkey_parse_private_fileblob_type;
        sshkey_parse_pubkey_from_private_fileblob_type;
        sshkey_plain_to_blob;
        sshkey_private_deserialize;
        sshkey_private_serialize;
        sshkey_private_serialize_maxsign;
        sshkey_private_serialize_opt;
        sshkey_private_to_fileblob;
        sshkey_putb;
        sshkey_putb_plain;
        sshkey_puts;
        sshkey_puts_opts;
        sshkey_read;
        sshkey_set_filename;
        sshkey_shield_private;
        sshkey_sigalg_by_name;
        sshkey_sig_details_free;
        sshkey_sig_from_asn1;
        sshkey_sign;
        sshkey_signatures_left;
        sshkey_sig_to_asn1;
        sshkey_size;
        sshkey_ssh_name;
        sshkey_ssh_name_plain;
        sshkey_to_base64;
        sshkey_to_blob;
        sshkey_to_certified;
        sshkey_type;
        sshkey_type_from_name;
        sshkey_type_is_cert;
        sshkey_type_plain;
        sshkey_unshield_private;
        sshkey_verify;
        sshkey_write;

        /*
         * other ssh lib symbols
         */
        ssh_err;

        /*
         * tlv.c
         */
        tlv_abort;
        tlv_at_end;
        tlv_at_root_end;
        tlv_buf;
        tlv_end;
        tlv_free;
        tlv_init;
        tlv_init_write;
        tlv_len;
        tlv_pop;
        tlv_ptr;
        tlv_push;
        tlv_read;
        tlv_read_alloc;
        tlv_read_string;
        tlv_read_tag;
        tlv_read_u16;
        tlv_read_u8;
        tlv_read_u8to32;
        tlv_read_upto;
        tlv_rem;
        tlv_root_rem;
        tlv_skip;
        tlv_write;
        tlv_write_byte;
        tlv_write_u16;
        tlv_write_u8to32;

        /*
         * selected LibreSSL bits
         */
        X509_CRL_free;
        X509_CRL_from_der;
        X509_CRL_new;
        X509_CRL_to_der;
        X509_free;
        X509_from_der;
        X509_new;
        X509_REQ_free;
        X509_REQ_from_der;
        X509_REQ_new;
        X509_REQ_to_der;
        X509_to_der;


    local: *;
};
